common:
  on_failure: &slackHook
    put: slack
    params:
      attachments: |2
          [{
              "color": "danger",
              "actions": [
                    {
                      "type": "button",
                      "text": "View in Concourse",
                      "url": "https://ci.korifi.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
                    }
              ]
          }]
      channel: '#korifi-ci'
      text: |
        Pipeline *$BUILD_PIPELINE_NAME* failed :cry:

        Job is *$BUILD_JOB_NAME*
        Build name is *$BUILD_NAME*

groups:
- name: main
  jobs:
  - update-ci-image
  - update-gcloud-image

jobs:
- name: update-ci-image
  plan:
  - in_parallel:
    - get: go-image
      trigger: true
    - get: image-source
      resource: ci-image-source
      trigger: true
    - get: oci-build-task-image
  - task: build-ci-image
    image: oci-build-task-image
    privileged: true
    config:
      platform: linux
      inputs:
      - name: image-source
        path: .
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT: images/ci
      run:
        path: build
  - put: ci-image
    params:
      image: image/image.tar
  - get: korifi-ci
  - task: clean-old-ci-images
    file: korifi-ci/pipelines/tasks/clean-old-ci-images.yml
    image: ci-image
    params:
      PACKAGE: ci
  on_failure: *slackHook
  on_error: *slackHook

- name: update-gcloud-image
  plan:
  - in_parallel:
    - get: google-cloud-sdk-image
      trigger: true
    - get: image-source
      resource: gcloud-image-source
      trigger: true
    - get: oci-build-task-image
  - task: build-ci-image
    image: oci-build-task-image
    privileged: true
    config:
      platform: linux
      inputs:
      - name: image-source
        path: .
      outputs:
      - name: image
      caches:
      - path: cache
      params:
        CONTEXT: images/gcloud
      run:
        path: build
  - put: gcloud-image
    params:
      image: image/image.tar
  - get: ci-image
  - get: korifi-ci
  - task: clean-old-ci-images
    file: korifi-ci/pipelines/tasks/clean-old-ci-images.yml
    image: ci-image
    params:
      PACKAGE: gcloud
  on_failure: *slackHook
  on_error: *slackHook

resource_types:
- name: slack-notification
  type: registry-image
  source:
    username: ((docker.user))
    password: ((docker.pass))
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: korifi-ci
  type: git
  icon: git
  source:
    uri: https://github.com/cloudfoundry/korifi-ci.git
    branch: main

- name: ci-image
  type: registry-image
  icon: docker
  source:
    repository: europe-docker.pkg.dev/cf-on-k8s-wg/ci/ci
    tag: latest
    username: _json_key
    password: ((gcp-artifact-registry-writer))

- name: ci-image-source
  type: git
  icon: git
  source:
    branch: main
    paths:
    - images/ci/*
    uri: https://github.com/cloudfoundry/korifi-ci

- name: go-image
  type: registry-image
  icon: docker
  source:
    username: ((docker.user))
    password: ((docker.pass))
    repository: golang
    tag: latest

- name: oci-build-task-image
  type: registry-image
  icon: docker
  source:
    username: ((docker.user))
    password: ((docker.pass))
    repository: concourse/oci-build-task

- name: gcloud-image
  type: registry-image
  icon: docker
  source:
    repository: europe-docker.pkg.dev/cf-on-k8s-wg/ci/gcloud
    tag: latest
    username: _json_key
    password: ((gcp-artifact-registry-writer))

- name: gcloud-image-source
  type: git
  icon: git
  source:
    branch: main
    paths:
    - images/gcloud/*
    uri: https://github.com/cloudfoundry/korifi-ci

- name: google-cloud-sdk-image
  type: registry-image
  icon: docker
  source:
    username: ((docker.user))
    password: ((docker.pass))
    repository: google/cloud-sdk
    tag: latest

- name: slack
  type: slack-notification
  icon: slack
  source:
    url: ((slack-notification.uri))
