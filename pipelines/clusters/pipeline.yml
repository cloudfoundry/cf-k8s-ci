common:
  on_failure: &slackHook
    put: slack
    params:
      attachments: |2
          [{
              "color": "danger",
              "actions": [
                    {
                      "type": "button",
                      "text": "View in Concourse",
                      "url": "https://ci.korifi.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
                    }
              ]
          }]
      channel: '#korifi-ci'
      text: |
        Pipeline *$BUILD_PIPELINE_NAME* failed :cry:

        Job is *$BUILD_JOB_NAME*
        Build name is *$BUILD_NAME*

  set_cluster_vars_inputs: &setClusterVarsInputs
    in_parallel:
    - get: korifi-ci
    - get: ci-image

  set_cluster_vars: &setClusterVars
    task: set-cluster-env-vars
    file: korifi-ci/pipelines/tasks/set-cluster-env-vars.yml
    image: ci-image
    params:
      CLUSTER_NAME: undefined

  trigger-on-cluster-event: &triggerOnClusterEvent
    get: cluster-event
    trigger: true


groups:
- name: main
  jobs:
  - create-cluster-acceptance
  - delete-cluster-acceptance
  - create-cluster-pr-e2e
  - delete-cluster-pr-e2e

jobs:

# ===== acceptance =====
- name: delete-cluster-acceptance
  serial: true
  serial_groups:
  - aceptance
  plan:
  - *setClusterVarsInputs
  - <<: *setClusterVars
    params:
      CLUSTER_NAME: acceptance
  - do: &deleteCluster
    - in_parallel:
      - get: gcloud-image
      - get: cf-k8s-secrets
    - load_var: cluster-env-vars
      file: clusters/env_vars.yaml
    - task: delete-kubernetes-cluster
      privileged: true
      file: korifi-ci/pipelines/tasks/delete-cluster.yml
      image: gcloud-image
      params:
        CLUSTER_NAME: ((.:cluster-env-vars.CLUSTER_NAME))
    - put: cluster-event
      params:
        bump: major
  on_failure: *slackHook

- name: create-cluster-acceptance
  serial: true
  serial_groups:
  - acceptance
  plan:
  - <<: *triggerOnClusterEvent
    passed:
    - delete-cluster-acceptance
  - *setClusterVarsInputs
  - <<: *setClusterVars
    params:
      CLUSTER_NAME: acceptance
  - do: &createCluster
    - in_parallel:
      - get: gcloud-image
      - get: cf-k8s-secrets
    - load_var: cluster-env-vars
      file: clusters/env_vars.yaml
    - task: delete-disks
      file: korifi-ci/pipelines/tasks/delete-disks.yml
      image: gcloud-image
      params:
        CLUSTER_NAME: ((.:cluster-env-vars.CLUSTER_NAME))
    - task: create-kubernetes-cluster
      file: korifi-ci/pipelines/tasks/create-cluster.yml
      image: gcloud-image
      params:
        CLUSTER_NAME: ((.:cluster-env-vars.CLUSTER_NAME))
        NODE_MACHINE_TYPE: e2-custom-4-6144
    - put: cluster-event
      params:
        bump: major
  on_failure: *slackHook

# ===== pr-e2e =====
- name: delete-cluster-pr-e2e
  serial: true
  serial_groups:
  - clusters
  plan:
  - get: delete-timer
    trigger: true
  - *setClusterVarsInputs
  - <<: *setClusterVars
    params:
      CLUSTER_NAME: pr-e2e
  - do: *deleteCluster
  on_failure: *slackHook

- name: create-cluster-pr-e2e
  serial: true
  serial_groups:
  - clusters
  plan:
  - <<: *triggerOnClusterEvent
    passed:
    - delete-cluster-pr-e2e
  - *setClusterVarsInputs
  - <<: *setClusterVars
    params:
      CLUSTER_NAME: pr-e2e
  - do: *createCluster
  on_failure: *slackHook

resource_types:
- name: slack-notification
  type: registry-image
  source:
    username: ((docker.user))
    password: ((docker.pass))
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: korifi-ci
  type: git
  icon: git
  source:
    uri: https://github.com/cloudfoundry/korifi-ci.git
    branch: main

- name: cf-k8s-secrets
  type: git
  icon: git
  source:
    uri: ((github/cf-k8s-secrets.uri))
    branch: main
    private_key: ((github/cf-k8s-secrets.private_key))

- name: delete-timer
  type: time
  icon: bomb
  source:
    start: 8:00 AM
    stop: 9:00 AM

- name: cluster-event
  type: semver
  icon: check-decagram
  source:
    uri: ((github/cf-k8s-secrets.uri))
    branch: events
    driver: git
    file: cluster-event
    initial_version: 0.1.0
    private_key: ((github/cf-k8s-secrets.private_key))

- name: slack
  type: slack-notification
  icon: slack
  source:
    url: ((slack-notification.uri))

- name: ci-image
  type: registry-image
  source:
    repository: europe-west1-docker.pkg.dev/cf-on-k8s-wg/ci/ci
    tag: latest
    username: _json_key
    password: ((gcp-artifact-registry-writer))

- name: gcloud-image
  type: registry-image
  source:
    repository: europe-west1-docker.pkg.dev/cf-on-k8s-wg/ci/gcloud
    tag: latest
    username: _json_key
    password: ((gcp-artifact-registry-writer))
